package gachaneitor;

import java_cup.runtime.*;
import java.io.*;

// class GachaneitorParser;

/* ---------------------- User code ---------------------- */
parser code {:
    public static BufferedWriter writer;
	
    public static void main(String[] args) throws Exception {
		FileInputStream file = new FileInputStream(args[0]);

        String targetName = args[0].replace(".txt", ".gachacode");

        writer = new BufferedWriter(new FileWriter(new File(targetName)));

		try {
			Reader reader = new InputStreamReader(file);
			new parser(new Lexer(reader)).parse();
			reader.close();
		}
		catch (Exception e) {
			System.out.println("Analysis error");
			System.exit(1);
        }

        writer.close();
		System.out.println("Analysis completed!");
 	}

    @Override
	public void report_error(String message, Object info) {
        System.err.println("Syntax error in line " + (cur_token.left + 1) + ", column " + (cur_token.right + 1) + ": " + message);
    }

    @Override
    public void report_fatal_error(String message, Object info) {
        report_error(message, info);
        System.exit(1);
    }

    @Override
    public void syntax_error(Symbol cur_token) {}

:}

/* ------------------- Grammar Symbols ------------------- */

terminal String string, id, velocidad;
terminal Integer temp, number, timer;
terminal paren_izq, paren_der, llave_izq, llave_der, dos_puntos, coma, punto_coma,
        duracion,
        menu, plato, info, nombre, usuario, raciones, tiempo, calorias, tipo, cocina,
        programar, calentar, remover, anadir, sacar,
        varoma, inverso, medida, al_gusto;

non terminal Integer TEMPERATURA, VELOCIDAD;
non terminal Boolean INVERSO;
non terminal MENU, LISTA_INGREDIENTES, LISTA_PLATOS, PLATO, LISTA_INSTRUCCIONES, CABECERA,
        NOMBRE, USUARIO, RACIONES, TIEMPO_TOTAL, CALORIAS, TIPO, COCINA, INSTRUCCION, PROGRAMAR,
        CALENTAR, REMOVER, ACCION_USUARIO, ANADIR, SACAR, INGREDIENTE, CANTIDAD;

/* --------------------- Precedences --------------------- */


/* ----------------------- Grammar ----------------------- */

MENU ::= menu id llave_izq NOMBRE LISTA_INGREDIENTES LISTA_PLATOS llave_der;

LISTA_INGREDIENTES ::= INGREDIENTE punto_coma LISTA_INGREDIENTES | ;
LISTA_PLATOS ::= PLATO LISTA_PLATOS | PLATO;

PLATO ::= plato id llave_izq CABECERA LISTA_INGREDIENTES LISTA_INSTRUCCIONES llave_der;

LISTA_INSTRUCCIONES ::= INSTRUCCION LISTA_INSTRUCCIONES | ;

CABECERA ::= info llave_izq NOMBRE USUARIO RACIONES TIEMPO_TOTAL CALORIAS TIPO COCINA llave_der;

NOMBRE ::= nombre dos_puntos string punto_coma 
    | nombre dos_puntos string error {:parser.report_error("expected ';'", null);:}
    | nombre string error {:parser.report_error("expected ':'", null);:} punto_coma;

USUARIO ::= usuario dos_puntos id punto_coma 
    | usuario dos_puntos id error {:parser.report_error("expected ';'", null);:}
    | usuario error {:parser.report_error("expected ':'", null);:} id punto_coma ;

RACIONES ::= raciones dos_puntos number punto_coma 
    | raciones dos_puntos number error {:parser.report_error("expected ';'", null);:}
    | raciones error {:parser.report_error("expected ':'", null);:} number punto_coma;

TIEMPO_TOTAL ::= tiempo dos_puntos duracion punto_coma 
    | tiempo dos_puntos duracion error {:parser.report_error("expected ';'", null);:}
    | tiempo error {:parser.report_error("expected ':'", null);:} duracion punto_coma;

CALORIAS ::= calorias dos_puntos number punto_coma 
    | calorias dos_puntos number error {:parser.report_error("expected ';'", null);:}
    | calorias error {:parser.report_error("expected ':'", null);:} number punto_coma
    | ;

TIPO ::= tipo dos_puntos string punto_coma 
    | tipo dos_puntos string error {:parser.report_error("expected ';'", null);:}
    | tipo error {:parser.report_error("expected ':'", null);:} string punto_coma 
    | ;

COCINA ::= cocina dos_puntos string punto_coma 
    | cocina dos_puntos string error {:parser.report_error("expected ';'", null);:}
    | cocina error {:parser.report_error("expected ':'", null);:} string punto_coma
    | ;

INSTRUCCION ::= PROGRAMAR | ANADIR | CALENTAR | REMOVER | ACCION_USUARIO | SACAR;

PROGRAMAR ::= programar paren_izq TEMPERATURA:temperature coma VELOCIDAD:speed coma timer:time INVERSO:reverse paren_der punto_coma
    {: parser.writer.write("program(" + temperature.toString() + "," + speed.toString() + "," + time.toString() + "," + reverse.toString() + ")\n"); :}
    | programar paren_izq TEMPERATURA coma VELOCIDAD coma timer INVERSO paren_der error {:parser.report_error("expected ';'", null);:}
    | programar error {:parser.report_error("expected '('", null);:} TEMPERATURA coma VELOCIDAD coma timer INVERSO paren_der punto_coma
    | programar paren_izq TEMPERATURA error {:parser.report_error("expected ','", null);:} VELOCIDAD coma timer INVERSO paren_der punto_coma
    | programar paren_izq TEMPERATURA coma VELOCIDAD error {:parser.report_error("expected ','", null);:} timer INVERSO paren_der punto_coma
    | programar paren_izq TEMPERATURA coma VELOCIDAD coma timer INVERSO error {:parser.report_error("expected ')'", null);:} punto_coma;

ANADIR ::= anadir paren_izq id:ingredient paren_der punto_coma {: parser.writer.write("add(\"" + ingredient + "\")\n"); :}
    | anadir paren_izq string:ingredient paren_der punto_coma {: parser.writer.write("add(\"" + ingredient + "\")\n"); :}
    | anadir paren_izq id paren_der error {:parser.report_error("expected ';'", null);:}
    | anadir paren_izq string paren_der error {:parser.report_error("expected ';'", null);:}
    | anadir error {:parser.report_error("expected '('", null);:} id paren_der punto_coma
    | anadir paren_izq id error {:parser.report_error("expected ')'", null);:} punto_coma
    | anadir error {:parser.report_error("expected '('", null);:} string paren_der punto_coma
    | anadir paren_izq string error {:parser.report_error("expected ')'", null);:} punto_coma;

CALENTAR ::= calentar paren_izq TEMPERATURA:temperature coma timer:time paren_der punto_coma
    {: parser.writer.write("program(" + temperature.toString() + ", 0," + time.toString() + ")\n"); :}
    | calentar paren_izq TEMPERATURA coma timer paren_der error {:parser.report_error("expected ';'", null);:}
    | calentar error {:parser.report_error("expected '('", null);:} TEMPERATURA coma timer paren_der punto_coma
    | calentar paren_izq TEMPERATURA coma timer error {:parser.report_error("expected ')'", null);:} punto_coma;

REMOVER ::= remover paren_izq VELOCIDAD:speed coma timer:time INVERSO:reverse paren_der punto_coma
    {: parser.writer.write("program(0," + speed.toString() + "," + time.toString() + "," + reverse.toString() + ")\n"); :}
    | remover paren_izq VELOCIDAD coma timer INVERSO paren_der error {:parser.report_error("expected ';'", null);:}
    | remover paren_izq VELOCIDAD error {:parser.report_error("expected ','", null);:} timer INVERSO paren_der punto_coma
    | remover error {:parser.report_error("expected '('", null);:} VELOCIDAD coma timer INVERSO paren_der punto_coma
    | remover paren_izq VELOCIDAD coma timer INVERSO error {:parser.report_error("expected ')'", null);:} punto_coma;

ACCION_USUARIO ::= string:action punto_coma {: parser.writer.write("useraction(\"" + action + "\")\n"); :}
    | string error {:parser.report_error("expected ';'", null);:};

SACAR ::= sacar paren_izq string:content paren_der punto_coma {: parser.writer.write("take(\"" + content + "\")\n"); :}
    | sacar paren_izq string paren_der error {:parser.report_error("expected ';'", null);:}
    | sacar error {:parser.report_error("expected '('", null);:} string paren_der punto_coma
    | sacar paren_izq string error {:parser.report_error("expected ')'", null);:} punto_coma;

INVERSO ::= coma inverso {: RESULT=true; :} | {: RESULT=false; :};
INGREDIENTE ::= CANTIDAD id;
CANTIDAD ::= al_gusto | number medida;
TEMPERATURA ::= temp:temperature {: RESULT=temperature; :} | varoma {: RESULT=-30; :};
VELOCIDAD ::= number:num {: if(num < 30) {
                                num = 30;
                                System.out.println("Warning!: The temperature must be above 30°C.");
                            }
                            else if(num > 120){
                                num = 120;
                                System.out.println("Warning!: The temperature must be below 120°C.");
                            }
                            RESULT=num; :} 
    | velocidad:type {: if(type.equals("cuchara")) RESULT=-1;
                        else if(type.equals("espiga")) RESULT=-2;
                        else if(type.equals("turbo")) RESULT=-3; :};